#
# Version: MPL 1.1/EUPL 1.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at:
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is Copyright The PEPPOL project (http://www.peppol.eu)
#
# Alternatively, the contents of this file may be used under the
# terms of the EUPL, Version 1.1 or - as soon they will be approved
# by the European Commission - subsequent versions of the EUPL
# (the "Licence"); You may not use this work except in compliance
# with the Licence.
# You may obtain a copy of the Licence at:
# http://joinup.ec.europa.eu/software/page/eupl/licence-eupl
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the Licence is distributed on an "AS IS" basis,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the Licence for the specific language governing permissions and
# limitations under the Licence.
#
# If you wish to allow use of your version of this file only
# under the terms of the EUPL License and not to allow others to use
# your version of this file under the MPL, indicate your decision by
# deleting the provisions above and replace them with the notice and
# other provisions required by the EUPL License. If you do not delete
# the provisions above, a recipient may use your version of this file
# under either the MPL or the EUPL License.
#

#log4j.rootLogger=ERROR,stdout 

log4j.logger.eu.europa.ec.cipa=ERROR,logfile

log4j.logger.httplog=DEBUG,httpfile

#log4j.logger.org.hibernate.SQL=TRACE,stdout
#log4j.logger.org.hibernate.type=TRACE,stdout
#log4j.logger.org.hibernate.service.jta=TRACE,stdout
#log4j.logger.eu.europa.ec.cipa.eprocurement.integration.business=DEBUG,stdout
#log4j.logger.eu.europa.ec.cipa.etrustex.integration.service=DEBUG,stdout
#log4j.additivity.eu.europa.ec.cipa.eprocurement.integration.business=false
#log4j.additivity.eu.europa.ec.cipa.etrustex.integration.service=false
#log4j.logger.eu.europa.ec.cipa.etrustex.integration.dispatcher=INFO,stdout
#log4j.additivity.eu.europa.ec.cipa.etrustex.integration.dispatcher=false
log4j.logger.org.springframework.transaction=DEBUG,logfile
#log4j.additivity.logger.org.hibernate.SQL=false
#log4j.additivity.logger.org.hibernate.type=false
#log4j.additivity.eu.europa.ec.cipa=false
log4j.logger.org.hibernate=DEBUG,logfile
log4j.logger.org.jboss=DEBUG,logfile


# A1 is set to be a ConsoleAppender.
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender

# A1 uses PatternLayout.
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d [%p] %c %x - %m%n


# Second appender to write to a logfile
log4j.appender.logfile=org.apache.log4j.RollingFileAppender
log4j.appender.logfile.File=logs/etrustex.log
log4j.appender.logfile.MaxFileSize=51200KB
# Keep ten backup files.
log4j.appender.logfile.MaxBackupIndex=10
# Pattern to output: date priority [category] - message
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%d{ISO8601} [%p] %c - %m%n


log4j.appender.httpfile=org.apache.log4j.RollingFileAppender
log4j.appender.httpfile.File=logs/http.log
log4j.appender.httpfile.MaxFileSize=51200KB
# Keep ten backup files.
log4j.appender.httpfile.MaxBackupIndex=10
# Pattern to output: date priority [category] - message
log4j.appender.httpfile.layout=org.apache.log4j.PatternLayout
log4j.appender.httpfile.layout.ConversionPattern=%d{ISO8601} [%p] %c - %m%n
